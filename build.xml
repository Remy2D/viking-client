<?xml version="1.0" ?>

<project name="hafen" default="deftgt">
  <property name="name" value="amber"/>
  <property name="version" value="3.21.0"/>

  <target name="build-env">
    <mkdir dir="build" />
  	<mkdir dir="build/lib" />
    <mkdir dir="build/classes" />
    <available property="has-res-jar" file="build/hafen-res.jar" />
    <available property="has-buildinfo" file="build/classes/buildinfo" />
    <available property="unpacked-lib" file="build/classes-lib" />
  </target>
  
  <target name="buildinfo" depends="build-env" unless="has-buildinfo">
    <exec executable="git" outputproperty="gitrev" failifexecutionfails="false">
      <arg line="rev-parse HEAD" />
    </exec>
    <echo file="build/classes/buildinfo" xml:space="default">${version},${gitrev}</echo>
  </target>

  <target name="hafen-client" depends="build-env">
    <javac srcdir="src" destdir="build/classes" debug="on"
	   source="1.8" target="1.8" includeantruntime="no" encoding="UTF-8">
      <classpath>
      	<pathelement path="lib/jogl.jar" />
      	<pathelement path="lib/gluegen-rt.jar" />
      	<pathelement path="lib/jglob.jar" />
		<pathelement path="lib/sentry.jar" />
		<pathelement path="lib/graal-sdk.jar" />
		<pathelement path="lib/graaljs.jar" />
		<pathelement path="lib/icu4j.jar" />
		<pathelement path="lib/tregex.jar" />
		<pathelement path="lib/truffle-api.jar" />
	  </classpath>
      <compilerarg value="-Xlint:unchecked" />
      <compilerarg value="-Xlint:-options" />
      <!-- <compilerarg value="-Xbarda" /> -->
    </javac>
    <copy todir="build/classes">
      <fileset dir="src" excludes="**/*.java" />
    </copy>
    <copy todir="build/classes/haven" file="etc/ressrv.crt" />
    <copy todir="build/classes/haven" file="etc/authsrv.crt" />
    <copy todir="build/classes/haven" file="etc/res-preload" />
    <copy todir="build/classes/haven" file="etc/res-bgload" />
    <copy todir="build/classes/haven" file="etc/icon.png" />
	<copy todir="build" file="etc/icons" />
  	<copy todir="build" file="etc/run.sh" />
    <!--copy todir="build" file="etc/grid_ids.txt" /-->
  </target>

  <target name="lib-classes" depends="build-env" unless="unpacked-lib">
    <mkdir dir="build/classes-lib" />
    <unjar src="lib/jglob.jar" dest="build/classes-lib">
      <patternset excludes="META-INF/**" />
    </unjar>
  </target>

  <target name="jar" depends="hafen-client,buildinfo,lib-classes">
    <jar destfile="build/hafen.jar" update="true">
      <fileset dir="build/classes" />
      <fileset dir="build/classes-lib" /><manifest>
	<attribute name="Main-Class" value="haven.MainFrame" />
	<attribute name="Class-Path" value="lib/slf4j-api.jar lib/slf4j-simple.jar lib/jackson-core.jar lib/sentry.jar lib/postgresql-jdbc.jar lib/pasta-res.jar lib/jogl.jar lib/gluegen-rt.jar lib/amber-res.jar lib/builtin-res.jar lib/hafen-res.jar lib/l10n.jar lib/graal-sdk.jar lib/graaljs.jar lib/icu4j.jar lib/tregex.jar lib/truffle-api.jar" />
      </manifest>
    </jar>
    <chmod file="build/hafen.jar" perm="a+x" />
  </target>
  
  <target name="res-jar" depends="build-env" unless="has-res-jar">
    <get src="http://game.havenandhearth.com/java/old-builtin-res.jar" dest="lib/builtin-res.jar"
	 usetimestamp="true" />
    <get src="http://game.havenandhearth.com/java/old-hafen-res.jar" dest="lib/hafen-res.jar"
	 usetimestamp="true" />
  </target>

  <target name="l10n-jar" depends="build-env">
    <jar destfile="build/lib/l10n.jar">
      <fileset dir="." includes="l10n/*.properties" excludes="l10n/*_new.properties"/>
    </jar>
  </target>
	
	<target name="custom-encode" depends="build-env">
		<mkdir dir ="build/custom-res"/>
		<java jar="lib/LayerUtil.jar" fork="true">
			<arg line="-re custom-res build/custom-res"/>
		</java>
	</target>
	
	<target name="custom-jar" depends="custom-encode">
		<jar basedir="build/custom-res" destfile="build/lib/pasta-res.jar"/>
		<delete dir="build/custom-res"/>
	</target>
	
  <target name="scripts" depends="build-env">
    <mkdir dir="build/scripts"/>
  	<copy todir="build/scripts">
      <fileset dir="scripts/" includes="*"/>
  	</copy>
  </target>
  <target name="alarms" depends="build-env">
	<mkdir dir="build/alarms"/>
	<copy todir="build/alarms">
		<fileset dir="customAlarms/alarms" includes="*">
		</fileset>
	</copy>
	<copy todir="build" file="customAlarms/defaultAlarms" />
  </target>
  
  <target name="jars" depends="build-env, jar, res-jar, l10n-jar, custom-jar, scripts, alarms">
    <copy todir="build/lib">
      <fileset dir="lib">
	<include name="jogl.jar" />
	<include name="gluegen-rt.jar" />
	<include name="hafen-res.jar" />
	<include name="builtin-res.jar" />
	<include name="amber-res.jar" />
	<include name="postgresql-jdbc.jar" />
	<include name="sentry.jar" />
	<include name="slf4j-api.jar" />
	<include name="slf4j-simple.jar" />
	<include name="graal-sdk.jar" />
	<include name="graaljs.jar" />
	<include name="icu4j.jar" />
	<include name="tregex.jar" />
	<include name="truffle-api.jar" />
	<include name="jackson-core.jar" />
      </fileset>
      <fileset dir="lib/jogl-natives" includes="*.jar">
      </fileset>
    </copy>
  </target>

	 <target name="dist" depends="rebuild, doc">
	    <zip destfile="build/update.zip" update="true">
	        <fileset dir="build" includes="*hafen.jar, grid_ids.txt, icons, defaultAlarms, alarms/*, scripts/*"/>
	    	<zipfileset dir="build/lib" includes="slf4j-api.jar, slf4j-simple.jar, jackson-core.jar, sentry.jar, postgresql-jdbc.jar, amber-res.jar, l10n.jar, pasta-res.jar, graal-sdk.jar, graaljs.jar, tregex.jar, truffle-api.jar, icu4j.jar" prefix="lib/"/>
	    </zip>
		 <exec executable="sh" >
			 <arg line="./deploy.sh" />
		 </exec>
	</target>

  <target name="deftgt" depends="jars" />

  <target name="run" depends="jars">
    <java jar="build/hafen.jar" fork="true" />
  </target>
  
  <target name="clean">
    <delete dir="build" />
  </target>

  <target name="rebuild" depends="clean, jars">
    <copy todir="build/res">
        <fileset dir="custom_res/"/>
    </copy>
  </target>

	<target name="doc">
		<javadoc destdir="doc/javadoc">
			<fileset dir="src/haven/purus/pbot" />
		</javadoc>
	</target>
  
  <target name="profile" depends="jars">
    <nbprofiledirect>
    </nbprofiledirect>
      <java fork="true" jar="build/hafen.jar">
        <jvmarg value="${profiler.info.jvmargs.agent}" />
        <sysproperty key="haven.dbtext" value="on" />
        <sysproperty key="haven.defserv" value="sh.seatribe.se" />
        <sysproperty key="haven.resdir" value="/home/fredrik/src/hafen/res" />
      </java>
  </target>
</project>
